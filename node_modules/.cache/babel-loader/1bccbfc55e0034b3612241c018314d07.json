{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0430\\u0440\\u0438\\u043D\\u0430\\\\Documents\\\\GitHub\\\\Sirpositiveparadox.github.io-Form\\\\src\\\\Form.js\";\nimport React, { Component } from 'react';\nimport './Form.css';\nimport axios from 'axios';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields: fields\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n\n    if (this.validateForm()) {\n      let data = {\n        email: this.state.fields.email,\n        text: this.state.fields.feedback\n      };\n      let url = 'https://dev.choicy.com/api/feedback';\n      axios.post(url, data).then(response => {\n        console.log(response);\n        console.log(response.data);\n      }).catch(err => err); // this.setState({fields:fields});\n      //alert('Feedback submitted');\n    }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formValid = true;\n\n    if (!fields['email']) {\n      formValid = false;\n      errors['email'] = '* Please enter your email address.';\n    }\n\n    if (typeof fields['email'] !== 'undefined') {\n      let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields['email'])) {\n        formValid = false;\n        errors['email'] = \"* Please enter a valid email address.\";\n      }\n    }\n\n    if (!fields.feedback) {\n      formValid = false;\n      errors['feedback'] = '* Please enter your feedback.';\n    }\n\n    ;\n\n    if (fields.feedback && fields.feedback.length > 0 && fields.feedback.length < 10) {\n      formValid = false;\n      errors['feedback'] = '* Feedback message must contain at least 10 characters.';\n    }\n\n    if (fields.feedback && fields.feedback.length > 200) {\n      formValid = false;\n      errors['feedback'] = '* Maximum amount of characters: 200.';\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formValid;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"feedback\",\n      action: \"https://choicy.com/feedback\",\n      method: \"post\",\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Get in Touch\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Please fill out the quick form and we will be in touch with lightening speed.\"), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: \"email\",\n      placeholder: \"Your Email address\",\n      value: this.state.fields.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), this.state.errors.email && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.errors.email), React.createElement(\"label\", {\n      htmlFor: \"feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      name: \"feedback\",\n      className: \"message\",\n      rows: \"4\",\n      cols: \"10\",\n      placeholder: \"Message\",\n      value: this.state.fields.feedback,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), this.state.errors.feedback && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.errors.feedback), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"SUBMIT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Марина/Documents/GitHub/Sirpositiveparadox.github.io-Form/src/Form.js"],"names":["React","Component","axios","Form","constructor","state","fields","errors","handleChange","bind","submitForm","e","target","name","value","setState","preventDefault","validateForm","data","email","text","feedback","url","post","then","response","console","log","catch","err","formValid","pattern","RegExp","test","length","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './Form.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Form extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tfields: {},\r\n\t\t\terrors: {}\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t};\r\n\r\n\thandleChange(e) {\r\n\t\tlet fields = this.state.fields;\r\n\t\tfields[e.target.name] = e.target.value;\r\n\t\tthis.setState ({\r\n\t\t\tfields: fields\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tsubmitForm(e) {\r\n\t\te.preventDefault();\r\n\t\tif (this.validateForm()) {\r\n\t\t\tlet data = {\r\n\t\t\t\temail: this.state.fields.email,\r\n\t\t\t\ttext: this.state.fields.feedback\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet url = 'https://dev.choicy.com/api/feedback';\r\n\r\n\t\t\taxios.post(url, data)\r\n\t\t\t\t.then((response) => {\r\n\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\tconsole.log(response.data);\r\n\r\n\t\t\t}).catch(err => err);\r\n\r\n\r\n\t\t\t// this.setState({fields:fields});\r\n\t\t\t//alert('Feedback submitted');\r\n\t\t}\r\n\t}\r\n\r\n\tvalidateForm() {\r\n\t\tlet fields = this.state.fields;\r\n\t\tlet errors = {};\r\n\t\tlet formValid = true;\r\n\r\n\t\tif (!fields['email']) {\r\n\t\t\tformValid = false;\r\n\t\t\terrors['email'] = '* Please enter your email address.';\r\n\t\t}\r\n\r\n\t\tif (typeof fields['email'] !== 'undefined') {\r\n\t\t\tlet pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n\t        if (!pattern.test(fields['email'])) {\r\n\t\t          formValid = false;\r\n\t\t          errors['email'] = \"* Please enter a valid email address.\";\r\n\t\t      }\r\n\t\t}\r\n\r\n\t\tif (!fields.feedback) {\r\n\t\t\tformValid = false;\r\n\t\t\terrors['feedback'] = '* Please enter your feedback.';\r\n\t\t};\r\n\r\n\t\tif (fields.feedback && fields.feedback.length > 0 && fields.feedback.length < 10){\r\n\r\n\t\t\tformValid = false;\r\n\t\t\terrors['feedback'] = '* Feedback message must contain at least 10 characters.';\r\n\t\t}\r\n\r\n\t\tif (fields.feedback && fields.feedback.length > 200) {\r\n\t\t\tformValid = false;\r\n\t\t\terrors['feedback'] = '* Maximum amount of characters: 200.';\r\n\t\t}\r\n\r\n\r\n\r\n\t\tthis.setState({\r\n\t\t\terrors: errors\r\n\t\t});\r\n\r\n\t\treturn formValid;\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<form className=\"feedback\" action=\"https://choicy.com/feedback\" method=\"post\" onSubmit= {this.submitForm}>\r\n\t\t\t\t<h1>Get in Touch</h1>\r\n\t\t\t\t<p>Please fill out the quick form and we will be in touch with lightening speed.</p>\r\n\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t<input type=\"email\" name=\"email\" className=\"email\" placeholder=\"Your Email address\" value= {this.state.fields.email} onChange={this.handleChange} />\r\n\t\t\t\t{this.state.errors.email && \r\n\t\t\t\t\t<div className=\"error\">{this.state.errors.email}</div>\r\n\t\t\t\t}\r\n\t\t\t\t<label htmlFor=\"feedback\">Message</label>\r\n\t\t\t\t<textarea name=\"feedback\" className=\"message\" rows=\"4\" cols=\"10\" placeholder=\"Message\" value= {this.state.fields.feedback}\tonChange={this.handleChange} />\r\n\t\t\t\t{this.state.errors.feedback &&\r\n\t\t\t\t\t<div className=\"error\">{this.state.errors.feedback}</div>\r\n\t\t\t\t}\r\n\t\t\t\t<input type=\"submit\" className=\"button\"  value=\"SUBMIT\"/>\r\n\t\t\t\t</form>\r\n\t\t\t);\r\n\r\n}\r\n\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}